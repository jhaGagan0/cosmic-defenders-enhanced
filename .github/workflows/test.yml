## .github/workflows/test.yml
yaml
name: Test Cosmic Defenders Enhanced

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pygame xvfb
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame>=2.1.0
        if [ -f requirements_enhanced.txt ]; then pip install -r requirements_enhanced.txt; fi
    
    - name: Create necessary directories
      run: |
        mkdir -p saves assets/images assets/sounds assets/fonts
    
    - name: Run component tests
      run: |
        xvfb-run -a python test_enhanced_game.py
    
    - name: Test game imports
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'game')
        from settings_enhanced import SCREEN_WIDTH
        from game_manager_enhanced import EnhancedGameManager
        print('All imports successful')
        "
    
    - name: Validate game structure
      run: |
        python -c "
        import os
        required_files = [
            'cosmic_defenders_enhanced.py',
            'launch_enhanced_game.py',
            'test_enhanced_game.py',
            'game/settings_enhanced.py',
            'game/game_manager_enhanced.py',
            'game/player_enhanced.py',
            'game/enemy_enhanced.py',
            'game/bullet_enhanced.py',
            'game/powerup_enhanced.py',
            'game/particles_enhanced.py',
            'game/ui_enhanced.py',
            'game/audio_enhanced.py',
            'game/leaderboard_enhanced.py',
            'game/level_enhanced.py'
        ]
        missing = [f for f in required_files if not os.path.exists(f)]
        if missing:
            print(f'Missing files: {missing}')
            exit(1)
        print('All required files present')
        "
    
    - name: Check code quality
      run: |
        python -m py_compile cosmic_defenders_enhanced.py
        python -m py_compile launch_enhanced_game.py
        python -m py_compile test_enhanced_game.py
        python -m py_compile setup_enhanced_game.py
        find game -name "*.py" -exec python -m py_compile {} \;
